{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eltre\\\\Desktop\\\\app-tracker\\\\client\\\\src\\\\components\\\\screens\\\\Applications\\\\DisplayApplicationsChild.js\";\nimport * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from './Loading';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport Avatar from '@material-ui/core/Avatar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayApplicationsChild = props => {\n  const companyLogos = \"https://logo.clearbit.com/pinterest.com\"; // const displayAplications = (props) => {\n\n  const {\n    applications\n  } = props;\n\n  if (applications.length > 0) {\n    return applications.map((application, index) => {\n      const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\n      return /*#__PURE__*/_jsxDEV(Box, {\n        component: \"span\",\n        style: {\n          display: 'inline-block',\n          transform: 'scale(0.8)',\n          minWidth: 275,\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            style: {\n              height: \"250px\",\n              width: \"300px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              action: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 41\n              }, this),\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: companyLogos,\n                \"aria-label\": `company-logo`,\n                style: {\n                  width: \"55px\",\n                  height: \"55px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 41\n              }, this),\n              title: application.company,\n              subheader: `Applied on: ${formattedDate}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                style: {\n                  fontColor: \"\"\n                },\n                children: application.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  mb: 1.5\n                },\n                color: \"text.secondary\",\n                children: application.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: application.comments\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    });\n  } else {\n    // return (<h3>No applications yet</h3>)\n\n    /*#__PURE__*/\n    _jsxDEV(Loading, {\n      size: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  } // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayAplications(props)\n  }, void 0, false);\n};\n\n_c = DisplayApplicationsChild;\nexport default DisplayApplicationsChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayApplicationsChild\");","map":{"version":3,"sources":["C:/Users/eltre/Desktop/app-tracker/client/src/components/screens/Applications/DisplayApplicationsChild.js"],"names":["React","Box","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Typography","Loading","moment","IconButton","MoreVertIcon","BusinessIcon","Avatar","axios","DisplayApplicationsChild","props","companyLogos","applications","length","map","application","index","formattedDate","dateApplied","format","display","transform","minWidth","padding","height","width","company","fontColor","position","mb","status","comments","displayAplications"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loading from './Loading';\r\nimport moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport axios from 'axios';\r\n\r\nconst DisplayApplicationsChild = (props) => {\r\n\r\n    const companyLogos = \"https://logo.clearbit.com/pinterest.com\";\r\n\r\n    // const displayAplications = (props) => {\r\n    const { applications } = props;\r\n\r\n    if (applications.length > 0) {\r\n        return (\r\n            applications.map((application, index) => {\r\n                const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\r\n\r\n                return (\r\n                    <Box component=\"span\" style={{ display: 'inline-block', transform: 'scale(0.8)', minWidth: 275, padding: '20px' }} >\r\n                        <React.Fragment>\r\n                            <Card variant=\"outlined\" style={{ height: \"250px\", width: \"300px\" }}>\r\n                                <CardHeader\r\n                                    action={\r\n                                        <IconButton color=\"primary\" >\r\n                                            <MoreVertIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                    }\r\n                                    avatar={\r\n                                        <Avatar src={companyLogos} aria-label={`company-logo`} style={{ width: \"55px\", height: \"55px\" }} />\r\n                                    }\r\n                                    title={application.company}\r\n                                    subheader={`Applied on: ${formattedDate}`}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"div\" style={{ fontColor: \"\" }}>\r\n                                        {application.position}\r\n                                    </Typography>\r\n                                    <Typography style={{ mb: 1.5 }} color=\"text.secondary\">\r\n                                        {application.status}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">\r\n                                        {application.comments}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </React.Fragment>\r\n                    </Box>\r\n                )\r\n            })\r\n        )\r\n    } else {\r\n        // return (<h3>No applications yet</h3>)\r\n        <Loading size={10} />\r\n    }\r\n    // }\r\n    return (\r\n        <>\r\n            {displayAplications(props)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplayApplicationsChild\r\n"]},"metadata":{},"sourceType":"module"}