{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eltre\\\\Desktop\\\\app-tracker\\\\client\\\\src\\\\components\\\\screens\\\\Applications\\\\DisplayApplicationsChild.js\";\nimport * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayApplicationsChild = props => {\n  const displayAplications = props => {\n    const {\n      applications\n    } = props;\n\n    if (applications.length > 0) {\n      return applications.map((application, index) => {\n        console.log(application);\n        return (\n          /*#__PURE__*/\n          // <div>\n          //     <h3>{application.company}</h3>\n          //     <p>{application.position}</p>\n          //     <p>{application.status}</p>\n          // </div>\n          _jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            style: {\n              width: \"0px\",\n              margin: \"0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                display: 'inline-block',\n                mx: '2px',\n                transform: 'scale(0.8)',\n                minWidth: 275\n              },\n              children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  variant: \"outlined\",\n                  style: {\n                    height: \"250px\",\n                    width: \"300px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      style: {\n                        fontSize: 21,\n                        fontWeight: 600\n                      },\n                      gutterBottom: true,\n                      children: application.company\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 30,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h5\",\n                      component: \"div\",\n                      style: {\n                        fontColor: \"\"\n                      },\n                      children: application.position\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 33,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      style: {\n                        mb: 1.5\n                      },\n                      color: \"text.secondary\",\n                      children: [application.status, \" - Date Applied: \", application.dateApplied]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 36,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: application.comments\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        );\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No applications yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayAplications(props)\n  }, void 0, false);\n};\n\n_c = DisplayApplicationsChild;\nexport default DisplayApplicationsChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayApplicationsChild\");","map":{"version":3,"sources":["C:/Users/eltre/Desktop/app-tracker/client/src/components/screens/Applications/DisplayApplicationsChild.js"],"names":["React","Box","Card","CardActions","CardContent","Button","Grid","Typography","DisplayApplicationsChild","props","displayAplications","applications","length","map","application","index","console","log","width","margin","display","mx","transform","minWidth","height","fontSize","fontWeight","company","fontColor","position","mb","status","dateApplied","comments"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst DisplayApplicationsChild = (props) => {\r\n\r\n    const displayAplications = (props) => {\r\n        const { applications } = props;\r\n\r\n        if (applications.length > 0) {\r\n            return (\r\n                applications.map((application, index) => {\r\n                    console.log(application);\r\n                    return (\r\n                        // <div>\r\n                        //     <h3>{application.company}</h3>\r\n                        //     <p>{application.position}</p>\r\n                        //     <p>{application.status}</p>\r\n                        // </div>\r\n                        <Grid container spacing={2} style={{ width: \"0px\", margin: \"0px\" }}>\r\n                            <Box component=\"span\" sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)', minWidth: 275 }} >\r\n                                <React.Fragment>\r\n                                    <Card variant=\"outlined\" style={{ height: \"250px\", width: \"300px\" }}>\r\n                                        <CardContent>\r\n                                            <Typography style={{ fontSize: 21, fontWeight: 600 }} gutterBottom>\r\n                                                {application.company}\r\n                                            </Typography>\r\n                                            <Typography variant=\"h5\" component=\"div\" style={{ fontColor: \"\" }}>\r\n                                                {application.position}\r\n                                            </Typography>\r\n                                            <Typography style={{ mb: 1.5 }} color=\"text.secondary\">\r\n                                                {application.status} - Date Applied: {application.dateApplied}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\">\r\n                                                {application.comments}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </React.Fragment>\r\n                            </Box>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            return (<h3>No applications yet</h3>)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {displayAplications(props)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplayApplicationsChild\r\n"]},"metadata":{},"sourceType":"module"}