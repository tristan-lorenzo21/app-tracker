{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eltre\\\\Desktop\\\\app-tracker\\\\client\\\\src\\\\components\\\\screens\\\\Applications\\\\DisplayApplicationsChild.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    maxWidth: 500,\n    margin: \"10px 15px 10px 0\"\n  },\n  headerTitle: {\n    maxWidth: 300,\n    fontWeight: 600,\n    fontSize: 25\n  }\n});\n\nconst DisplayApplicationsChild = (props, {\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const displayAplications = props => {\n    const {\n      applications\n    } = props;\n\n    if (applications.length > 0) {\n      return applications.map((application, index) => {\n        const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\n        return (\n          /*#__PURE__*/\n          // <Container>\n          _jsxDEV(Box, {\n            component: \"span\",\n            style: {\n              display: 'inline-block',\n              transform: 'scale(0.8)',\n              minWidth: 275,\n              paddingLeft: '30px',\n              marginLeft: '270px'\n            },\n            children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                columns: 1,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 1,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    variant: \"outlined\",\n                    style: {\n                      height: \"250px\",\n                      width: \"300px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                      action: /*#__PURE__*/_jsxDEV(IconButton, {\n                        color: \"primary\",\n                        children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                          fontSize: \"large\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 51,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 50,\n                        columnNumber: 53\n                      }, this),\n                      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                        src: application.companyLogo,\n                        \"aria-label\": `company-logo`,\n                        style: {\n                          width: \"55px\",\n                          height: \"55px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 55,\n                        columnNumber: 53\n                      }, this),\n                      title: application.company,\n                      subheader: `Applied on: ${formattedDate}`,\n                      classes: {\n                        title: classes.headerTitle\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                      style: {\n                        paddingTop: 0,\n                        paddingLeft: \"25px\",\n                        paddingRight: \"25px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        component: \"div\",\n                        style: {\n                          fontColor: \"\"\n                        },\n                        children: application.position\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        style: {\n                          mb: 1.5\n                        },\n                        color: \"text.secondary\",\n                        children: application.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 67,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        children: application.comments\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this) // {/* </Container> */}\n\n        );\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No applications yet \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayAplications(props)\n  }, void 0, false);\n};\n\n_s(DisplayApplicationsChild, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DisplayApplicationsChild;\nexport default DisplayApplicationsChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayApplicationsChild\");","map":{"version":3,"sources":["C:/Users/eltre/Desktop/app-tracker/client/src/components/screens/Applications/DisplayApplicationsChild.js"],"names":["React","Card","CardHeader","CardContent","Typography","moment","Container","Box","Grid","IconButton","MoreVertIcon","Avatar","makeStyles","NavBar","useStyles","root","minWidth","maxWidth","margin","headerTitle","fontWeight","fontSize","DisplayApplicationsChild","props","history","classes","displayAplications","applications","length","map","application","index","formattedDate","dateApplied","format","display","transform","paddingLeft","marginLeft","height","width","companyLogo","company","title","paddingTop","paddingRight","fontColor","position","mb","status","comments"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport moment from 'moment';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 300,\r\n        maxWidth: 500,\r\n        margin: \"10px 15px 10px 0\",\r\n    },\r\n    headerTitle: {\r\n        maxWidth: 300,\r\n        fontWeight: 600,\r\n        fontSize: 25\r\n    },\r\n});\r\n\r\nconst DisplayApplicationsChild = (props, { history }) => {\r\n    const classes = useStyles();\r\n\r\n    const displayAplications = (props) => {\r\n        const { applications } = props;\r\n\r\n        if (applications.length > 0) {\r\n            return (\r\n                applications.map((application, index) => {\r\n                    const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\r\n\r\n                    return (\r\n                        // <Container>\r\n                        <Box component=\"span\" style={{ display: 'inline-block', transform: 'scale(0.8)', minWidth: 275, paddingLeft: '30px', marginLeft: '270px' }}>\r\n                            <React.Fragment>\r\n                                {/* <Container> */}\r\n                                <Grid container spacing={1} columns={1}>\r\n                                    <Grid item xs={1} >\r\n                                        <Card variant=\"outlined\" style={{ height: \"250px\", width: \"300px\" }}>\r\n                                            <CardHeader\r\n                                                action={\r\n                                                    <IconButton color=\"primary\" >\r\n                                                        <MoreVertIcon fontSize=\"large\" />\r\n                                                    </IconButton>\r\n                                                }\r\n                                                avatar={\r\n                                                    <Avatar src={application.companyLogo} aria-label={`company-logo`} style={{ width: \"55px\", height: \"55px\" }} />\r\n                                                }\r\n                                                title={application.company}\r\n                                                subheader={`Applied on: ${formattedDate}`}\r\n                                                classes={{\r\n                                                    title: classes.headerTitle\r\n                                                }}\r\n                                            />\r\n                                            <CardContent style={{ paddingTop: 0, paddingLeft: \"25px\", paddingRight: \"25px\" }}>\r\n                                                <Typography variant=\"h5\" component=\"div\" style={{ fontColor: \"\" }}>\r\n                                                    {application.position}\r\n                                                </Typography>\r\n                                                <Typography style={{ mb: 1.5 }} color=\"text.secondary\">\r\n                                                    {application.status}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\">\r\n                                                    {application.comments}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* </Container> */}\r\n                            </React.Fragment>\r\n                        </Box>\r\n                        // {/* </Container> */}\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <h3>No applications yet </h3>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {displayAplications(props)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplayApplicationsChild;\r\n"]},"metadata":{},"sourceType":"module"}