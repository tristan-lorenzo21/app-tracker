{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eltre\\\\Desktop\\\\app-tracker\\\\client\\\\src\\\\components\\\\screens\\\\Applications\\\\NavBar.js\";\nimport * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = makeStyles({\n  logoutButton: {\n    float: \"right\"\n  }\n});\n\nconst NavBar = props => {\n  const classes = style();\n\n  const displayNavbar = props => {\n    const {\n      applications\n    } = props;\n    const {\n      logoutHandler\n    } = props;\n\n    if (applications.length > 0) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"static\",\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              edge: \"start\",\n              color: \"inherit\",\n              \"aria-label\": \"menu\",\n              float: \"right\",\n              sx: {\n                mr: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              sx: {\n                flexGrow: 1\n              },\n              children: [\"Welcome, \", applications[0].username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              className: classes.logoutButton,\n              onClick: logoutHandler,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    } else {\n      // return (<h3>No applications yet</h3>)\n\n      /*#__PURE__*/\n      _jsxDEV(Loading, {\n        size: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayNavbar(props)\n  }, void 0, false);\n};\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/eltre/Desktop/app-tracker/client/src/components/screens/Applications/NavBar.js"],"names":["React","AppBar","Box","Toolbar","Typography","Button","IconButton","MenuIcon","makeStyles","Loading","style","logoutButton","float","NavBar","props","classes","displayNavbar","applications","logoutHandler","length","flexGrow","mr","username"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,KAAK,GAAGF,UAAU,CAAC;AACrBG,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG;AADO,CAAD,CAAxB;;AAMA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,OAAO,GAAGL,KAAK,EAArB;;AAEA,QAAMM,aAAa,GAAIF,KAAD,IAAW;AAC7B,UAAM;AAAEG,MAAAA;AAAF,QAAmBH,KAAzB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAoBJ,KAA1B;;AAEA,QAAIG,YAAY,CAACE,MAAb,GAAsB,CAA1B,EAA6B;AAEzB,0BACI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAZ;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAC,QAAjB;AAAA,iCACI,QAAC,OAAD;AAAA,oCACI,QAAC,UAAD;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,KAAK,EAAC,SAHV;AAII,4BAAW,MAJf;AAKI,cAAA,KAAK,EAAC,OALV;AAMI,cAAA,EAAE,EAAE;AAAEC,gBAAAA,EAAE,EAAE;AAAN,eANR;AAAA,qCAQI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAC,KAAnC;AAAyC,cAAA,EAAE,EAAE;AAAED,gBAAAA,QAAQ,EAAE;AAAZ,eAA7C;AAAA,sCACcH,YAAY,CAAC,CAAD,CAAZ,CAAgBK,QAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAcI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,SAAS,EAAEP,OAAO,CAACJ,YAA3C;AAAyD,cAAA,OAAO,EAAEO,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAsBH,KAxBD,MAwBO;AACH;;AACA;AAAA,cAAC,OAAD;AAAS,QAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA;AACH;AACJ,GAhCD;;AAkCA,sBACI;AAAA,cACKF,aAAa,CAACF,KAAD;AADlB,mBADJ;AAKH,CA1CD;;KAAMD,M;AA4CN,eAAeA,MAAf","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Loading from './Loading';\r\n\r\nconst style = makeStyles({\r\n    logoutButton: {\r\n        float: \"right\"\r\n    }\r\n})\r\n\r\nconst NavBar = (props) => {\r\n    const classes = style();\r\n\r\n    const displayNavbar = (props) => {\r\n        const { applications } = props;\r\n        const { logoutHandler } = props;\r\n\r\n        if (applications.length > 0) {\r\n\r\n            return (\r\n                <Box style={{ flexGrow: 1 }}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                edge=\"start\"\r\n                                color=\"inherit\"\r\n                                aria-label=\"menu\"\r\n                                float=\"right\"\r\n                                sx={{ mr: 2 }}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                Welcome, {applications[0].username}\r\n                            </Typography>\r\n                            <Button color=\"inherit\" className={classes.logoutButton} onClick={logoutHandler}>Logout</Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </Box>\r\n            )\r\n        } else {\r\n            // return (<h3>No applications yet</h3>)\r\n            <Loading size={10} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {displayNavbar(props)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\n"]},"metadata":{},"sourceType":"module"}