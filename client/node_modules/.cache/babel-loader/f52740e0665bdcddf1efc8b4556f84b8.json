{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eltre\\\\Desktop\\\\app-tracker\\\\client\\\\src\\\\components\\\\screens\\\\Applications\\\\DisplayApplicationsChild.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    maxWidth: 500,\n    margin: \"10px 15px 10px 0\"\n  },\n  headerTitle: {\n    maxWidth: 300,\n    fontWeight: 600,\n    fontSize: 25\n  }\n});\n\nconst DisplayApplicationsChild = (props, {\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const displayAplications = props => {\n    const {\n      applications\n    } = props;\n\n    if (applications.length > 0) {\n      return applications.map((application, index) => {\n        const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\n        return /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 8,\n            columns: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              style: {\n                height: \"250px\",\n                width: \"300px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                action: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 45\n                }, this),\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: application.companyLogo,\n                  \"aria-label\": `company-logo`,\n                  style: {\n                    width: \"55px\",\n                    height: \"55px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 45\n                }, this),\n                title: application.company,\n                subheader: `Applied on: ${formattedDate}`,\n                classes: {\n                  title: classes.headerTitle\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                style: {\n                  paddingTop: 0,\n                  paddingLeft: \"25px\",\n                  paddingRight: \"25px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"div\",\n                  style: {\n                    fontColor: \"\"\n                  },\n                  children: application.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    mb: 1.5\n                  },\n                  color: \"text.secondary\",\n                  children: application.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: application.comments\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No applications yet \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayAplications(props)\n  }, void 0, false);\n};\n\n_s(DisplayApplicationsChild, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DisplayApplicationsChild;\nexport default DisplayApplicationsChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayApplicationsChild\");","map":{"version":3,"sources":["C:/Users/eltre/Desktop/app-tracker/client/src/components/screens/Applications/DisplayApplicationsChild.js"],"names":["React","Card","CardHeader","CardContent","Typography","moment","Container","Grid","GridList","IconButton","MoreVertIcon","Avatar","makeStyles","NavBar","useStyles","root","minWidth","maxWidth","margin","headerTitle","fontWeight","fontSize","DisplayApplicationsChild","props","history","classes","displayAplications","applications","length","map","application","index","formattedDate","dateApplied","format","height","width","companyLogo","company","title","paddingTop","paddingLeft","paddingRight","fontColor","position","mb","status","comments"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport moment from 'moment';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 300,\r\n        maxWidth: 500,\r\n        margin: \"10px 15px 10px 0\",\r\n    },\r\n    headerTitle: {\r\n        maxWidth: 300,\r\n        fontWeight: 600,\r\n        fontSize: 25\r\n    },\r\n});\r\n\r\nconst DisplayApplicationsChild = (props, { history }) => {\r\n    const classes = useStyles();\r\n\r\n    const displayAplications = (props) => {\r\n        const { applications } = props;\r\n\r\n        if (applications.length > 0) {\r\n            return (\r\n                applications.map((application, index) => {\r\n                    const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\r\n\r\n                    return (\r\n                        <Container>\r\n                            <Grid container spacing={8} columns={12}>\r\n                                {/* <Grid item xs={8} > */}\r\n                                <Card variant=\"outlined\" style={{ height: \"250px\", width: \"300px\" }}>\r\n                                    <CardHeader\r\n                                        action={\r\n                                            <IconButton color=\"primary\" >\r\n                                                <MoreVertIcon fontSize=\"large\" />\r\n                                            </IconButton>\r\n                                        }\r\n                                        avatar={\r\n                                            <Avatar src={application.companyLogo} aria-label={`company-logo`} style={{ width: \"55px\", height: \"55px\" }} />\r\n                                        }\r\n                                        title={application.company}\r\n                                        subheader={`Applied on: ${formattedDate}`}\r\n                                        classes={{\r\n                                            title: classes.headerTitle\r\n                                        }}\r\n                                    />\r\n                                    <CardContent style={{ paddingTop: 0, paddingLeft: \"25px\", paddingRight: \"25px\" }}>\r\n                                        <Typography variant=\"h5\" component=\"div\" style={{ fontColor: \"\" }}>\r\n                                            {application.position}\r\n                                        </Typography>\r\n                                        <Typography style={{ mb: 1.5 }} color=\"text.secondary\">\r\n                                            {application.status}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\">\r\n                                            {application.comments}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                                {/* </Grid> */}\r\n                            </Grid>\r\n                        </Container>\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <h3>No applications yet </h3>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {displayAplications(props)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplayApplicationsChild;\r\n"]},"metadata":{},"sourceType":"module"}