{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eltre\\\\Desktop\\\\app-tracker\\\\client\\\\src\\\\components\\\\screens\\\\Applications\\\\DisplayApplicationsChild.js\";\nimport * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from './Loading';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport Avatar from '@material-ui/core/Avatar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayApplicationsChild = props => {\n  const displayAplications = props => {\n    const {\n      applications,\n      companyLogo\n    } = props;\n    const companyLogos = \"https://logo.clearbit.com/pinterest.com\";\n\n    if (applications.length > 0) {\n      return applications.map((application, index) => {\n        companyLogo.map((logo, index) => {\n          const formattedDate = moment(application.dateApplied).format('MM-DD-YY'); // const companyData = fetchCompanyData();\n          // const parsedData = JSON.parse(companyData)\n\n          return /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            style: {\n              display: 'inline-block',\n              transform: 'scale(0.8)',\n              minWidth: 275,\n              padding: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                style: {\n                  height: \"250px\",\n                  width: \"300px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  action: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 49\n                  }, this),\n                  avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: logo(index),\n                    \"aria-label\": `company-logo`,\n                    style: {\n                      width: \"55px\",\n                      height: \"55px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 49\n                  }, this),\n                  title: application.company,\n                  subheader: `Applied on: ${formattedDate}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    component: \"div\",\n                    style: {\n                      fontColor: \"\"\n                    },\n                    children: application.position\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      mb: 1.5\n                    },\n                    color: \"text.secondary\",\n                    children: application.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: application.comments\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this);\n        });\n      });\n    } else {\n      // return (<h3>No applications yet</h3>)\n\n      /*#__PURE__*/\n      _jsxDEV(Loading, {\n        size: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayAplications(props)\n  }, void 0, false);\n};\n\n_c = DisplayApplicationsChild;\nexport default DisplayApplicationsChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayApplicationsChild\");","map":{"version":3,"sources":["C:/Users/eltre/Desktop/app-tracker/client/src/components/screens/Applications/DisplayApplicationsChild.js"],"names":["React","Box","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Typography","Loading","moment","IconButton","MoreVertIcon","BusinessIcon","Avatar","axios","DisplayApplicationsChild","props","displayAplications","applications","companyLogo","companyLogos","length","map","application","index","logo","formattedDate","dateApplied","format","display","transform","minWidth","padding","height","width","company","fontColor","position","mb","status","comments"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loading from './Loading';\r\nimport moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport axios from 'axios';\r\n\r\nconst DisplayApplicationsChild = (props) => {\r\n\r\n    const displayAplications = (props) => {\r\n        const { applications, companyLogo } = props;\r\n\r\n        const companyLogos = \"https://logo.clearbit.com/pinterest.com\";\r\n\r\n        if (applications.length > 0) {\r\n            return (\r\n                applications.map((application, index) => {\r\n                    companyLogo.map((logo, index) => {\r\n                        const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\r\n\r\n                        // const companyData = fetchCompanyData();\r\n\r\n                        // const parsedData = JSON.parse(companyData)\r\n\r\n                        return (\r\n                            <Box component=\"span\" style={{ display: 'inline-block', transform: 'scale(0.8)', minWidth: 275, padding: '20px' }} >\r\n                                <React.Fragment>\r\n                                    <Card variant=\"outlined\" style={{ height: \"250px\", width: \"300px\" }}>\r\n                                        <CardHeader\r\n                                            action={\r\n                                                <IconButton color=\"primary\" >\r\n                                                    <MoreVertIcon fontSize=\"large\" />\r\n                                                </IconButton>\r\n                                            }\r\n                                            avatar={\r\n                                                <Avatar src={logo(index)} aria-label={`company-logo`} style={{ width: \"55px\", height: \"55px\" }} />\r\n                                            }\r\n                                            title={application.company}\r\n                                            subheader={`Applied on: ${formattedDate}`}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography variant=\"h5\" component=\"div\" style={{ fontColor: \"\" }}>\r\n                                                {application.position}\r\n                                            </Typography>\r\n                                            <Typography style={{ mb: 1.5 }} color=\"text.secondary\">\r\n                                                {application.status}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\">\r\n                                                {application.comments}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </React.Fragment>\r\n                            </Box>\r\n                        )\r\n                    })\r\n                })\r\n            )\r\n        } else {\r\n            // return (<h3>No applications yet</h3>)\r\n            <Loading size={10} />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {displayAplications(props)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplayApplicationsChild\r\n"]},"metadata":{},"sourceType":"module"}