{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eltre\\\\Desktop\\\\app-tracker\\\\client\\\\src\\\\components\\\\screens\\\\Applications\\\\DisplayApplicationsChild.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from 'axios';\nimport { useState } from 'react'; // import UpdateApplication from './UpdateApplication';\n\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport TextField from \"@material-ui/core/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    maxWidth: 500,\n    margin: \"10px 15px 10px 0\"\n  },\n  headerTitle: {\n    maxWidth: 300,\n    fontWeight: 600,\n    fontSize: 25\n  }\n});\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  // border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  textAlign: \"center\"\n};\n\nconst DisplayApplicationsChild = (props, {\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [updatedComments, setUpdatedComments] = useState(\"\");\n  const [updatedStatus, setUpdatedStatus] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleOpenModal = () => setOpenModal(true);\n\n  const handleCloseModal = () => setOpenModal(false);\n\n  const displayAplications = props => {\n    const {\n      applications\n    } = props;\n\n    if (applications.length > 0) {\n      return applications.map((application, index) => {\n        const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\n\n        const deleteApplicationHandler = async id => {\n          const config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n            }\n          };\n\n          try {\n            axios.delete(`api/applications/deleteApplication/${application._id}`, config);\n            window.location.reload();\n          } catch (error) {\n            setError(error.response.data.error);\n          }\n        };\n\n        const updateApplicationHandler = async () => {\n          const config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n            }\n          };\n\n          try {\n            axios.put(`api/applications/updateApplication/${application._id}`, {\n              updatedStatus,\n              updatedComments\n            }, config);\n            window.location.reload();\n          } catch (error) {\n            setError(error.response.data.error);\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Modal, {\n            open: openModal,\n            onClose: handleCloseModal,\n            closeAfterTransition: true,\n            BackdropComponent: Backdrop,\n            BackdropProps: {\n              timeout: 500\n            },\n            \"aria-labelledby\": \"modal-modal-title\",\n            \"aria-describedby\": \"modal-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(Fade, {\n              in: openModal,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  margin: \"0px\",\n                  paddingLeft: \"200px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  style: {\n                    width: \"0px\",\n                    margin: \"0px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: style,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      id: \"modal-modal-title\",\n                      variant: \"h6\",\n                      component: \"h2\",\n                      children: [\"Update your application for \", application.company]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                      onSubmit: updateApplicationHandler,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        item: true,\n                        spacing: 5,\n                        justify: \"center\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 5,\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            required: true,\n                            placeholder: application.status,\n                            id: \"standard-basic\",\n                            label: \"Status\",\n                            variant: \"standard\",\n                            onChange: e => setUpdatedStatus(e.target.value),\n                            value: updatedStatus\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 147,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 146,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 5,\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            required: true,\n                            placeholder: application.comments,\n                            id: \"standard-basic\",\n                            label: \"Comments\",\n                            variant: \"standard\",\n                            onChange: e => setUpdatedComments(e.target.value),\n                            value: updatedComments\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 150,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outlined\",\n                        color: \"primary\",\n                        type: \"submit\",\n                        style: {\n                          marginTop: \"30px\"\n                        },\n                        children: \"Update Application\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            style: {\n              display: 'inline-block',\n              margin: '20px',\n              padding: '10px',\n              paddingLeft: '30px',\n              paddingTop: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: {\n                  xs: 2,\n                  md: 3\n                },\n                columns: {\n                  xs: 4,\n                  sm: 8,\n                  md: 12\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 2,\n                  sm: 4,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    variant: \"outlined\",\n                    style: {\n                      height: \"250px\",\n                      width: \"300px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                      action: /*#__PURE__*/_jsxDEV(IconButton, {\n                        color: \"primary\",\n                        onClick: handleClick,\n                        children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                          fontSize: \"large\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 57\n                      }, this),\n                      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                        src: application.companyLogo,\n                        \"aria-label\": `company-logo`,\n                        style: {\n                          width: \"55px\",\n                          height: \"55px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 57\n                      }, this),\n                      title: application.company,\n                      subheader: `Applied on: ${formattedDate}`,\n                      classes: {\n                        title: classes.headerTitle\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                      elevation: 1,\n                      id: \"basic-menu\",\n                      anchorEl: anchorEl,\n                      open: open,\n                      onClose: handleClose,\n                      style: {\n                        shadows: \"none\"\n                      },\n                      MenuListProps: {\n                        'aria-labelledby': 'basic-button'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        onClick: deleteApplicationHandler,\n                        children: \"Delete Application\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        onClick: handleOpenModal,\n                        children: \"Update Application\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                      style: {\n                        paddingTop: 0,\n                        paddingLeft: \"25px\",\n                        paddingRight: \"25px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        component: \"div\",\n                        style: {\n                          fontColor: \"\"\n                        },\n                        children: application.position\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        style: {\n                          mb: 1.5\n                        },\n                        color: \"text.secondary\",\n                        children: application.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        children: application.comments\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No applications yet \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayAplications(props)\n  }, void 0, false);\n};\n\n_s(DisplayApplicationsChild, \"+xqaGTduUsepkByI1RHS+BfoCyg=\", false, function () {\n  return [useStyles];\n});\n\n_c = DisplayApplicationsChild;\nexport default DisplayApplicationsChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayApplicationsChild\");","map":{"version":3,"sources":["C:/Users/eltre/Desktop/app-tracker/client/src/components/screens/Applications/DisplayApplicationsChild.js"],"names":["React","Card","CardHeader","CardContent","Typography","moment","Box","Grid","IconButton","MoreVertIcon","Avatar","makeStyles","Menu","MenuItem","axios","useState","Button","Modal","Fade","Backdrop","TextField","useStyles","root","minWidth","maxWidth","margin","headerTitle","fontWeight","fontSize","style","position","top","left","transform","width","bgcolor","boxShadow","p","textAlign","DisplayApplicationsChild","props","history","classes","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","updatedComments","setUpdatedComments","updatedStatus","setUpdatedStatus","error","setError","openModal","setOpenModal","handleOpenModal","handleCloseModal","displayAplications","applications","length","map","application","index","formattedDate","dateApplied","format","deleteApplicationHandler","id","config","headers","Authorization","localStorage","getItem","delete","_id","window","location","reload","response","data","updateApplicationHandler","put","timeout","paddingLeft","company","status","e","target","value","comments","marginTop","display","padding","paddingTop","xs","md","sm","height","companyLogo","title","shadows","paddingRight","fontColor","mb"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport moment from 'moment';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\n// import UpdateApplication from './UpdateApplication';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 300,\r\n        maxWidth: 500,\r\n        margin: \"10px 15px 10px 0\",\r\n    },\r\n    headerTitle: {\r\n        maxWidth: 300,\r\n        fontWeight: 600,\r\n        fontSize: 25\r\n    },\r\n});\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    // border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst DisplayApplicationsChild = (props, { history }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [updatedComments, setUpdatedComments] = useState(\"\");\r\n    const [updatedStatus, setUpdatedStatus] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const handleOpenModal = () => setOpenModal(true);\r\n    const handleCloseModal = () => setOpenModal(false);\r\n\r\n    const displayAplications = (props) => {\r\n        const { applications } = props;\r\n\r\n        if (applications.length > 0) {\r\n            return (\r\n                applications.map((application, index) => {\r\n                    const formattedDate = moment(application.dateApplied).format('MM-DD-YY');\r\n\r\n                    const deleteApplicationHandler = async (id) => {\r\n                        const config = {\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n                            },\r\n                        };\r\n\r\n                        try {\r\n                            axios.delete(\r\n                                `api/applications/deleteApplication/${application._id}`,\r\n                                config\r\n                            );\r\n\r\n                            window.location.reload();\r\n\r\n                        } catch (error) {\r\n                            setError(error.response.data.error);\r\n                        }\r\n                    }\r\n\r\n\r\n                    const updateApplicationHandler = async () => {\r\n                        const config = {\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n                            },\r\n                        };\r\n\r\n                        try {\r\n                            axios.put(\r\n                                `api/applications/updateApplication/${application._id}`,\r\n                                { updatedStatus, updatedComments },\r\n                                config\r\n                            );\r\n\r\n                            window.location.reload();\r\n\r\n                        } catch (error) {\r\n                            setError(error.response.data.error);\r\n                        }\r\n                    }\r\n\r\n                    return (\r\n                        <>\r\n                            <Modal\r\n                                open={openModal}\r\n                                onClose={handleCloseModal}\r\n                                closeAfterTransition\r\n                                BackdropComponent={Backdrop}\r\n                                BackdropProps={{\r\n                                    timeout: 500\r\n                                }}\r\n                                aria-labelledby=\"modal-modal-title\"\r\n                                aria-describedby=\"modal-modal-description\"\r\n                            >\r\n                                <Fade in={openModal}>\r\n                                    <div style={{ margin: \"0px\", paddingLeft: \"200px\" }}>\r\n                                        <Grid container spacing={2} style={{ width: \"0px\", margin: \"0px\" }}>\r\n                                            <Box sx={style}>\r\n                                                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                                                    Update your application for {application.company}\r\n                                                </Typography>\r\n\r\n                                                <form onSubmit={updateApplicationHandler}>\r\n                                                    <Grid container item spacing={5} justify=\"center\">\r\n                                                        <Grid item xs={5}>\r\n                                                            <TextField required placeholder={application.status} id=\"standard-basic\" label=\"Status\" variant=\"standard\" onChange={(e) => setUpdatedStatus(e.target.value)} value={updatedStatus} />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={5}>\r\n                                                            <TextField required placeholder={application.comments} id=\"standard-basic\" label=\"Comments\" variant=\"standard\" onChange={(e) => setUpdatedComments(e.target.value)} value={updatedComments} />\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" style={{ marginTop: \"30px\" }}>Update Application</Button>\r\n                                                </form>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Fade>\r\n                            </Modal>\r\n                            <Box component=\"span\" style={{ display: 'inline-block', margin: '20px', padding: '10px', paddingLeft: '30px', paddingTop: '20px' }}>\r\n                                <React.Fragment>\r\n                                    <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }} >\r\n                                        <Grid item xs={2} sm={4} md={4} >\r\n                                            <Card variant=\"outlined\" style={{ height: \"250px\", width: \"300px\" }}>\r\n                                                <CardHeader\r\n                                                    action={\r\n                                                        <IconButton color=\"primary\" onClick={handleClick}>\r\n                                                            <MoreVertIcon fontSize=\"large\" />\r\n                                                        </IconButton>\r\n                                                    }\r\n                                                    avatar={\r\n                                                        <Avatar src={application.companyLogo} aria-label={`company-logo`} style={{ width: \"55px\", height: \"55px\" }} />\r\n                                                    }\r\n                                                    title={application.company}\r\n                                                    subheader={`Applied on: ${formattedDate}`}\r\n                                                    classes={{\r\n                                                        title: classes.headerTitle\r\n                                                    }}\r\n                                                />\r\n                                                <Menu\r\n                                                    elevation={1}\r\n                                                    id=\"basic-menu\"\r\n                                                    anchorEl={anchorEl}\r\n                                                    open={open}\r\n                                                    onClose={handleClose}\r\n                                                    style={{ shadows: \"none\" }}\r\n                                                    MenuListProps={{\r\n                                                        'aria-labelledby': 'basic-button',\r\n                                                    }}\r\n                                                >\r\n                                                    <MenuItem onClick={deleteApplicationHandler}>Delete Application</MenuItem>\r\n                                                    <MenuItem onClick={handleOpenModal}>Update Application</MenuItem>\r\n                                                </Menu>\r\n                                                <CardContent style={{ paddingTop: 0, paddingLeft: \"25px\", paddingRight: \"25px\" }}>\r\n                                                    <Typography variant=\"h5\" component=\"div\" style={{ fontColor: \"\" }}>\r\n                                                        {application.position}\r\n                                                    </Typography>\r\n                                                    <Typography style={{ mb: 1.5 }} color=\"text.secondary\">\r\n                                                        {application.status}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\">\r\n                                                        {application.comments}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </React.Fragment>\r\n                            </Box>\r\n                        </>\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <h3>No applications yet </h3>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {displayAplications(props)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplayApplicationsChild;"]},"metadata":{},"sourceType":"module"}