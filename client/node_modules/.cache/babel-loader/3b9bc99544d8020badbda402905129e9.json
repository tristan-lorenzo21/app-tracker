{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eltre\\\\Desktop\\\\app-tracker\\\\client\\\\src\\\\components\\\\routing\\\\screens\\\\PrivateScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PrivateScreen = ({\n  history\n}) => {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [privateData, setPrivateData] = useState(\"\");\n  useEffect(() => {\n    if (!localStorage.getItem(\"authToken\")) {\n      history.push(\"/login\");\n    }\n\n    const fetchPrivateData = async () => {\n      const config = {\n        header: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        }\n      };\n\n      try {\n        const {\n          data\n        } = await axios.get(\"api/private\", config);\n        setPrivateData(data.data);\n      } catch (error) {\n        // if there was an error with requesting, we know it's an invalid token, so we remove the token\n        localStorage.removeItem(\"authToken\");\n        setError(\"You are not authorized, please login\");\n      }\n    };\n\n    fetchPrivateData();\n  }, [history]);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"authToken\");\n    history.push(\"/login\");\n  };\n\n  return error ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"green\",\n        color: \"white\"\n      },\n      children: privateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logoutHandler,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PrivateScreen, \"LKgiR0Mkx7vvWCEqb9wbXK/J2yU=\");\n\n_c = PrivateScreen;\nexport default PrivateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateScreen\");","map":{"version":3,"sources":["C:/Users/eltre/Desktop/app-tracker/client/src/components/routing/screens/PrivateScreen.js"],"names":["useState","useEffect","axios","PrivateScreen","history","error","setError","privateData","setPrivateData","localStorage","getItem","push","fetchPrivateData","config","header","Authorization","data","get","removeItem","logoutHandler","background","color"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACQ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAL,EAAwC;AACpCN,MAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACH;;AAED,UAAMC,gBAAgB,GAAG,YAAY;AACjC,YAAMC,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAE;AACJ,0BAAgB,kBADZ;AAEJC,UAAAA,aAAa,EAAG,UAASN,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFvD;AADG,OAAf;;AAOA,UAAI;AACA,cAAM;AAAEM,UAAAA;AAAF,YAAW,MAAMd,KAAK,CAACe,GAAN,CAAU,aAAV,EAAyBJ,MAAzB,CAAvB;AACAL,QAAAA,cAAc,CAACQ,IAAI,CAACA,IAAN,CAAd;AACH,OAHD,CAGE,OAAOX,KAAP,EAAc;AACZ;AACAI,QAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AACAZ,QAAAA,QAAQ,CAAC,sCAAD,CAAR;AACH;AACJ,KAhBD;;AAkBAM,IAAAA,gBAAgB;AACnB,GAxBQ,EAwBN,CAACR,OAAD,CAxBM,CAAT;;AA0BA,QAAMe,aAAa,GAAG,MAAM;AACxBV,IAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AACAd,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACH,GAHD;;AAKA,SACIN,KAAK,gBAAG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,cAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAoD;AAAA,4BACrD;AAAK,MAAA,KAAK,EAAE;AAAEe,QAAAA,UAAU,EAAE,OAAd;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAAZ;AAAA,gBAAsDd;AAAtD;AAAA;AAAA;AAAA;AAAA,YADqD,eAErD;AAAQ,MAAA,OAAO,EAAEY,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFqD;AAAA,kBAD7D;AAMH,CAzCD;;GAAMhB,a;;KAAAA,a;AA2CN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst PrivateScreen = ({ history }) => {\r\n    const [error, setError] = useState(\"\");\r\n    const [privateData, setPrivateData] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"authToken\")) {\r\n            history.push(\"/login\");\r\n        }\r\n\r\n        const fetchPrivateData = async () => {\r\n            const config = {\r\n                header: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n                }\r\n            }\r\n\r\n            try {\r\n                const { data } = await axios.get(\"api/private\", config);\r\n                setPrivateData(data.data);\r\n            } catch (error) {\r\n                // if there was an error with requesting, we know it's an invalid token, so we remove the token\r\n                localStorage.removeItem(\"authToken\");\r\n                setError(\"You are not authorized, please login\");\r\n            }\r\n        }\r\n\r\n        fetchPrivateData();\r\n    }, [history]);\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    return (\r\n        error ? <span className=\"error-message\">{error}</span> : <>\r\n            <div style={{ background: \"green\", color: \"white\" }}>{privateData}</div>\r\n            <button onClick={logoutHandler}>Logout</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateScreen;"]},"metadata":{},"sourceType":"module"}